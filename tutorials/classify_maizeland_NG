---
title: Rapid classification of croplands: Case Study of smallholder maize-cultivated lands
description: A short description of the tutorial, all on one line with no carriage returns.
author: PJNation
tags: maize, smallholder, cropland, classify, rapid, binary
date_published: 2020-06-31
---
#


<!--
Copyright 2019 The Google Earth Engine Community Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

#Background
Land-cover classification in complex landscapes have been constrained by inherent short-distance transition in crop/vegetation types, especially in complex smallholder farming systems. The increasing availability and accessibility of earth observation imageries provides significant opportunities to assess status and monitor changes in land cover, yet unlocking such capability is contingent on availability of relevant ground-truth data to calibrate and validate classification algorithms. The critically needed spatially-explicit ground-truth data are often unavailable in sub-Saharan African farming systems and this constrains development of relevant analytical tools to monitor cropland dynamics or generate [near]real-time insights on farming systems.  This tutorial was developed as a quick guide for users who are interested in implementing landcover classification routine in google earth engine environment, using ground-truth data and available sentinel 2A spectral bands imageries. The goal is to provide an easy-to-implement workflow that can be adapted by researchers and analysts to quickly classify croplands. As more efforts are invested in collecting spatially-rich georeferenced data at national and regional levels, this tutorial can be tweaked to generate immeditiate/timely insights.

#Caveat
This landcover classification was implemented based on available data as collected under a  multi-year project (https://tamasa.cimmyt.org/) which was focused on advancing digital agronomic innovation for decision support in maize-based farming systems. Therefore, the available ground-truth data is rich in maize farm locations, and contains much fewer datapoints for other croptypes within the focal geography. Cosidering this limitation, the scope of this classification tool and this tutorial is limited to binary classification of maizelands (i.e. maize vs. non-maize cultivated) within the period of data collection (i.e. 2017).

In a few sentences, describe what the user is going to learn. Be sure to include
_concise_ background information; only include what's helpful and relevant.
When in doubt, leave it out!


##Outline

1. Importing, Ingesting, and Visualizing Data
a. Import groundtruth data
b. Import boundary files
c. Ingest sentinel 2A Imageries

2.	Setting-Up and Implementing Analytics
a. Defining model
b. Selecting/optimizing Classifiers
c. Generating results

3.	Plotting the charts to generate insights

5.	Exporting Outputs


## Section heading 1

Break up your tutorial into manageable sections.

With one or more paragraphs, separated by a blank line.

Inside your sections, you can also:

1. Use numbered lists
1. ..when the order..
1. ..of items is important.

And:

- This is a bulleted list.
- Use bulleted lists when items are not strictly ordered.

..and even:

Use     | tables   | to organize | content
------- | -------- | ----------- | -------
Your    | tables   | can         | also
contain | multiple | rows        | ...

## Section heading 2

Use separate sections for related, but discrete, groups of steps.

Use code blocks to show users how to do something after describing it:

```
// Use comments to describe details that can't be easily expressed in code.
// Always try making code more self descriptive before adding a comment.
// Similarly, avoid repeating verbatim what's already said in code
// (e.g., "assign ImageCollection to variable 'coll'").
var coll = ee.ImageCollection('LANDSAT/LC08/C01/T1_TOA');
```

### Use subsections if appropriate

Consider breaking longer sections that cover multiple topics or span multiple
pages into subsections.
